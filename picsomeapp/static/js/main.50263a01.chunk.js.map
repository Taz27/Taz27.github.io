{"version":3,"sources":["PicContext.js","components/Header.js","hooks/useHover.js","components/CartItem.js","pages/Cart.js","components/Image.js","utils/index.js","pages/Photos.js","components/CodedBy.js","App.js","index.js"],"names":["PicContext","React","createContext","Header","cartIconClass","useContext","cartItems","length","to","className","useHover","useState","hovered","setHovered","ref","useRef","enter","leave","useEffect","current","addEventListener","removeEventListener","CartItem","props","removeFromCart","binIconClass","onClick","item","src","url","width","alt","Cart","placeOrder","cartItemsElements","map","key","id","totAmt","toLocaleString","style","currency","Image","toggleFavorite","addToCart","isAlreadyInCart","some","pic","img","isFavorite","undefined","getClass","i","Photos","allPhotos","isLoading","images","display","margin","CodedBy","position","textAlign","bottom","left","role","aria-label","App","exact","path","ReactDOM","render","setAllPhotos","setIsLoading","setCartItems","Storage","localStorage","photosArray","picArray","JSON","parse","fetch","then","response","json","data","Provider","value","imgId","newImgArray","setItem","stringify","prevCart","filter","e","persist","target","innerText","setTimeout","console","log","children","document","getElementById"],"mappings":"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","file":"static/js/main.50263a01.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\n//create a React Context object to store state variables and functions as globals \r\nconst PicContext = React.createContext();\r\n\r\nfunction PicContextProvider(props) {\r\n    const [allPhotos, setAllPhotos] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [cartItems, setCartItems] = useState([]);\r\n\r\n    function toggleFavorite(imgId) {\r\n        //console.log(imgId);\r\n        //toggle the isFavorite property of image objects stored in array\r\n        let newImgArray = allPhotos.map(pic => {\r\n            if (pic.id === imgId) {\r\n                return {...pic, isFavorite: !pic.isFavorite} \r\n            }\r\n            return pic;\r\n        });\r\n        //if the browser supports local storage, store the photos data in the window.localStorage object\r\n        if (typeof(Storage) !== \"undefined\") {\r\n            localStorage.setItem(\"photosArray\", JSON.stringify(newImgArray));\r\n        }\r\n        //set the new photos array in the state\r\n        setAllPhotos(newImgArray);\r\n    }\r\n\r\n    function addToCart(img) {\r\n        //Add item to cartItems state array\r\n        setCartItems(prevCart => [...prevCart, img]);\r\n    }\r\n\r\n    function removeFromCart(img) {  \r\n        //Remove item from cartItems state array\r\n        setCartItems(prevCart => prevCart.filter(item => item.id !== img.id));\r\n    }\r\n    \r\n    function placeOrder(e) {\r\n        //const event = {...e};\r\n        e.persist();\r\n    \r\n        e.target.innerText = \"Ordering...\";\r\n        setTimeout(() => {\r\n            console.log(\"Order Placed!\");\r\n            e.target.innerText = \"Place Order\";\r\n            setCartItems([]);\r\n        }, 3000);\r\n    }\r\n    //define useEffect HOOK which will execute as COMPONENTDIDMOUNT class method\r\n    useEffect(() => {\r\n        //check if photos data exists in browser's local storage. if it exists, load the initial state\r\n        //from it rather than making a fetch call to the API\r\n        if (typeof(Storage) !== \"undefined\") {\r\n            if (localStorage.photosArray) {\r\n                let picArray = JSON.parse(localStorage.photosArray);\r\n                setAllPhotos(picArray);\r\n                return;\r\n            }\r\n        }\r\n\r\n        setIsLoading(true);\r\n\r\n        fetch('https://raw.githubusercontent.com/bobziroll/scrimba-react-bootcamp-images/master/images.json')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setAllPhotos(data);\r\n                setIsLoading(false);\r\n            })\r\n    }, []);\r\n\r\n    return (\r\n        //store all the required state variables and functions in the 'value' object of the Context Provider so that they are available globally\r\n        <PicContext.Provider value={{allPhotos, isLoading, toggleFavorite, addToCart, cartItems, removeFromCart, placeOrder}}>\r\n            {props.children}\r\n        </PicContext.Provider>\r\n    );\r\n\r\n}\r\nexport {PicContextProvider, PicContext};","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PicContext } from \"../PicContext\";\r\n\r\nfunction Header() {\r\n    //grab cartItems from Context\r\n    const {cartItems} = useContext(PicContext);\r\n    \r\n    //store the appropriate class to style the cart icon in a variable as per the state of the cart\r\n    let cartIconClass = cartItems.length > 0 ? \"fill\" : \"line\";\r\n\r\n    return (\r\n        <header>\r\n            <Link to=\"/picsomeapp\"><h2>Pic Some</h2></Link>\r\n            <Link to=\"/picsomeapp/cart\"><i className={`ri-shopping-cart-${cartIconClass} ri-fw ri-2x`}></i></Link>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import { useState, useEffect, useRef } from \"react\";\r\n\r\nfunction useHover() {\r\n    // Keep track of hover state in this hook\r\n    const [hovered, setHovered] = useState(false);\r\n\r\n    //use the useRef hook to create a ref object to store the DOM node\r\n    const ref = useRef(null);\r\n\r\n    function enter() {\r\n        setHovered(true);\r\n    }\r\n\r\n    function leave() {\r\n        setHovered(false);\r\n    }\r\n\r\n    //define useEffect HOOK which will execute as COMPONENTDIDMOUNT class method\r\n    //add the event listeners\r\n    //return the function (to remove event listeners) which will be stored and executed\r\n    //as COMPONENTWILLUNMOUNT lifecycle method\r\n    useEffect(() => {\r\n        function removeEL() {\r\n            ref.current.removeEventListener(\"mouseenter\", enter);\r\n            ref.current.removeEventListener(\"mouseleave\", leave);    \r\n        }\r\n\r\n        ref.current.addEventListener(\"mouseenter\", enter);\r\n        ref.current.addEventListener(\"mouseleave\", leave);\r\n\r\n        return removeEL;\r\n    }, []);\r\n\r\n    return [hovered, ref];\r\n}\r\n\r\nexport default useHover;","import React, { useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { PicContext } from \"../PicContext\";\r\nimport useHover from \"../hooks/useHover\";\r\n\r\nfunction CartItem(props) {\r\n    //get hovered state variable and the React ref object from the custom hook\r\n    const [hovered, ref] = useHover();\r\n\r\n    //get removeFromCart function from Context\r\n    let { removeFromCart } = useContext(PicContext);\r\n    //choose appropriate style class for bin icon as per hovered state\r\n    let binIconClass = hovered ? \"fill\" : \"line\";\r\n\r\n    return (\r\n        <div className=\"cart-item\">\r\n            <i ref={ref} className={`ri-delete-bin-${binIconClass}`} onClick={() => removeFromCart(props.item)}></i>\r\n            <img src={props.item.url} width=\"130px\" alt=\"\" />\r\n            <p>$6.99</p>\r\n        </div>\r\n    );\r\n}\r\n\r\n//add a propTypes property to the component to set the acceptable types of props passed \r\nCartItem.propTypes = {\r\n    item: PropTypes.shape({\r\n        url: PropTypes.string.isRequired\r\n    })\r\n};\r\n\r\nexport default CartItem;","import React, { useContext } from \"react\";\r\nimport { PicContext } from \"../PicContext\";\r\nimport CartItem from \"../components/CartItem\";\r\n\r\nfunction Cart() {\r\n    //pull out cartItems and placeOrder function from the Context\r\n    const { cartItems, placeOrder } = useContext(PicContext);\r\n\r\n    //map the cartItems array and store instances of CartItem component (with props) in a new array\r\n    const cartItemsElements = cartItems.map(item => {\r\n        return <CartItem key={item.id} item={item} />\r\n    });\r\n\r\n    //calculate the total amount\r\n    let totAmt = cartItems.length * 6.99;\r\n\r\n    //define a function to render the order button if there are items in cart\r\n    function showOrderButton() {\r\n        if (cartItems.length > 0) {\r\n            return (<div className=\"order-button\">\r\n                        <button onClick={placeOrder}>Place Order</button>\r\n                    </div>);\r\n        } else {\r\n            //if the cart is empty, display the following element\r\n            return <p>You have no items in your cart.</p>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <main className=\"cart-page\">\r\n            <h1>Check out</h1>\r\n            {cartItemsElements}\r\n            <p className=\"total-cost\">Total: {totAmt.toLocaleString(\"en-AU\", {style: \"currency\", currency: \"AUD\"})}</p>\r\n            {showOrderButton()}\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Cart;","import React, { useContext } from \"react\";\r\nimport { PicContext } from \"../PicContext\";\r\nimport PropTypes from \"prop-types\";\r\nimport useHover from \"../hooks/useHover\";\r\n\r\nfunction Image(props) {\r\n    //get hovered state and ref object from custom hook\r\n    const [hovered, ref] = useHover();\r\n\r\n    //pull out the required variables from Context\r\n    const {toggleFavorite, addToCart, cartItems, removeFromCart} = useContext(PicContext);\r\n\r\n    //check if this image is already in cart to style the cart icon accordingly\r\n    let isAlreadyInCart = cartItems.some(pic => pic.id === props.img.id);\r\n    \r\n    return (\r\n        <div className={`${props.className} image-container`} ref={ref}>\r\n            <img src={props.img.url} alt=\"\" className=\"image-grid\" />\r\n            {hovered ? \r\n            <>\r\n                <i className={props.img.isFavorite ? \"ri-heart-fill favorite\" : \"ri-heart-line favorite\"} onClick={() => toggleFavorite(props.img.id)}></i>\r\n                {isAlreadyInCart ? \r\n                    <i className=\"ri-shopping-cart-fill cart\" onClick={() => removeFromCart(props.img)}></i> :\r\n                    <i className=\"ri-add-circle-line cart\" onClick={() => addToCart(props.img)}></i>}\r\n            </> :\r\n            <>\r\n                {props.img.isFavorite ? <i className=\"ri-heart-fill favorite\" onClick={() => toggleFavorite(props.img.id)}></i> : undefined}\r\n                {isAlreadyInCart ? <i className=\"ri-shopping-cart-fill cart\" onClick={() => removeFromCart(props.img)}></i> : undefined}\r\n            </>}    \r\n        </div>\r\n    );\r\n}\r\n\r\n//add a propTypes property to the component to set the acceptable types of props passed \r\nImage.propTypes = {\r\n    className: PropTypes.string,\r\n    img: PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        url: PropTypes.string.isRequired,\r\n        isFavorite: PropTypes.bool\r\n    })\r\n};\r\n\r\nexport default Image","export function getClass(i) {\r\n    if (i % 5 === 0) {\r\n        return 'big';\r\n    }\r\n    else if (i % 6 === 0) {\r\n        return 'wide';\r\n    }\r\n}","import React, {useContext} from \"react\";\r\nimport Image from \"../components/Image\";\r\nimport {getClass} from \"../utils\";\r\nimport {PicContext} from \"../PicContext\";\r\n\r\nfunction Photos() {\r\n    //pull out allPhotos array and isLoading variable from Context\r\n    const {allPhotos, isLoading} = useContext(PicContext);\r\n\r\n    //map the allPhotos array and create instances of Image component\r\n    const images = allPhotos.map((pic, i) => <Image key={pic.id} img={pic} className={getClass(i)} />);\r\n\r\n    return (\r\n        //display the loading gif while the images data is being fetched from API\r\n        isLoading ? <img src=\"https://media.giphy.com/media/lpOxKH3VWxTPi/giphy.gif\" alt=\"loading_gif\" style={{display: \"block\", margin: \"0 auto\"}} /> :\r\n        <main className=\"photos\">\r\n            {images}\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Photos;","import React from 'react';\r\n\r\nfunction CodedBy() {\r\n    return (\r\n        <div style={{position: \"fixed\", textAlign: \"left\", width: 350, bottom: 0, left: 0}}>\r\n            Coded with <span role=\"img\" aria-label=\"Love emoji\">❤️</span> using <em><strong>ReactJS</strong></em> by <strong>TARAN MAND</strong>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CodedBy;","import React from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport {Switch, Route} from \"react-router-dom\";\r\nimport Cart from \"./pages/Cart\";\r\nimport Photos from \"./pages/Photos\";\r\nimport CodedBy from \"./components/CodedBy\";\r\n\r\nfunction App() {    \r\n    return ( \r\n        //render 'Photos' and 'Cart' components according to the route path\r\n        <div>\r\n            <Header />\r\n            <Switch>\r\n                <Route exact path=\"/picsomeapp\">\r\n                    <Photos />\r\n                </Route>\r\n                <Route path=\"/picsomeapp/cart\">\r\n                    <Cart />\r\n                </Route>\r\n            </Switch>\r\n            <CodedBy />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter as Router} from 'react-router-dom'; //for conditionally rendering the page components as per routes\r\nimport './index.css';\r\nimport App from './App';\r\nimport {PicContextProvider} from \"./PicContext\"; //Context PROVIDER component\r\n\r\nReactDOM.render(<PicContextProvider>\r\n                    <Router>\r\n                        <App />\r\n                    </Router>\r\n                </PicContextProvider>, document.getElementById('root'));"],"sourceRoot":""}