{"version":3,"sources":["components/Header.js","components/MemeGenerator.js","components/CodedBy.js","components/MemeApp.js","App.js","index.js"],"names":["Header","src","alt","MemeGenerator","props","state","topText","bottomText","randomImg","allMemeImgs","isLoading","handleChange","bind","handleSubmit","this","setState","fetch","then","res","json","data","memes","event","target","name","value","preventDefault","randNum","Math","floor","random","length","randMemeImg","url","myMainDiv","className","onSubmit","type","placeholder","onChange","style","maxWidth","margin","React","Component","CodedBy","position","fontFamily","textAlign","width","bottom","left","role","aria-label","MemeApp","App","ReactDOM","render","document","getElementById"],"mappings":"6NAWeA,MATf,WACI,OACI,gCACI,yBAAKC,IAAI,iEAAiEC,IAAI,aAC9E,+C,iDCsEGC,E,YAzEX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,QAAS,GACTC,WAAY,GACZC,UAAW,gCACXC,YAAa,GACbC,WAAW,GAEf,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAVL,E,iFAaE,IAAD,OAChBE,KAAKC,SAAS,CAACL,WAAW,IAE1BM,MAAM,qCACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAEF,EAAKH,SAAS,CAACL,WAAW,EAAOD,YAAaS,EAAIE,KAAKC,a,mCAIlDC,GAAQ,IAAD,EACMA,EAAMC,OAArBC,EADS,EACTA,KAAMC,EADG,EACHA,MACbX,KAAKC,SAAL,eAAiBS,EAAOC,M,mCAGfH,GACTA,EAAMI,iBAEN,IAAMC,EAAUC,KAAKC,MAAMD,KAAKE,SAAWhB,KAAKT,MAAMI,YAAYsB,QAC5DC,EAAclB,KAAKT,MAAMI,YAAYkB,GAASM,IACpDnB,KAAKC,SAAS,CAAEP,UAAWwB,M,+BAI3B,IAAME,EAAY,6BACM,0BAAMC,UAAU,YAAYC,SAAUtB,KAAKD,cACvC,2BACIwB,KAAK,OACLZ,MAAOX,KAAKT,MAAMC,QAClBkB,KAAK,UACLc,YAAY,WACZC,SAAUzB,KAAKH,eAEnB,2BACI0B,KAAK,OACLZ,MAAOX,KAAKT,MAAME,WAClBiB,KAAK,aACLc,YAAY,cACZC,SAAUzB,KAAKH,eAEvB,wCAEA,yBAAKwB,UAAU,QACX,yBAAKlC,IAAKa,KAAKT,MAAMG,UAAWN,IAAI,SACpC,wBAAIiC,UAAU,OAAOrB,KAAKT,MAAMC,SAChC,wBAAI6B,UAAU,UAAUrB,KAAKT,MAAME,cAG/D,OACI,6BACKO,KAAKT,MAAMK,UACZ,yBAAK8B,MAAO,CAACC,SAAU,IAAKC,OAAQ,WAChC,yBAAKzC,IAAI,6DAA6DC,IAAI,iBACrEgC,O,GApEGS,IAAMC,WCQnBC,MARf,WACI,OACI,yBAAKL,MAAO,CAACM,SAAU,QAASC,WAAY,+BAAgCC,UAAW,OAAQC,MAAO,IAAKC,OAAQ,EAAGC,KAAM,IAA5H,cACe,0BAAMC,KAAK,MAAMC,aAAW,cAA5B,gBADf,OACqE,4BAAI,4CADzE,OAC0G,gDCUnGC,MAVf,WACI,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCAGC,MAPf,WACI,OACI,kBAAC,EAAD,OCCRC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6b1acc12.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header>\r\n            <img src=\"http://www.pngall.com/wp-content/uploads/2016/05/Trollface.png\" alt=\"problem?\" />\r\n            <p>Meme Generator</p>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nclass MemeGenerator extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            topText: \"\",\r\n            bottomText: \"\",\r\n            randomImg: \"http://i.imgflip.com/1bij.jpg\",\r\n            allMemeImgs: [],\r\n            isLoading: false\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({isLoading: true});\r\n\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            //console.log(res.data.memes);\r\n            this.setState({isLoading: false, allMemeImgs: res.data.memes});\r\n        });\r\n    }\r\n\r\n    handleChange(event) {\r\n        const {name, value} = event.target;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        const randNum = Math.floor(Math.random() * this.state.allMemeImgs.length);\r\n        const randMemeImg = this.state.allMemeImgs[randNum].url;\r\n        this.setState({ randomImg: randMemeImg});\r\n    }\r\n\r\n    render() {\r\n        const myMainDiv = <div>\r\n                                <form className=\"meme-form\" onSubmit={this.handleSubmit}>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        value={this.state.topText} \r\n                                        name=\"topText\"\r\n                                        placeholder=\"Top Text\" \r\n                                        onChange={this.handleChange} \r\n                                    />\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        value={this.state.bottomText} \r\n                                        name=\"bottomText\"\r\n                                        placeholder=\"Bottom Text\" \r\n                                        onChange={this.handleChange} \r\n                                    />\r\n                                <button>Gen</button>\r\n                                </form>\r\n                                <div className=\"meme\">\r\n                                    <img src={this.state.randomImg} alt=\"meme\" />\r\n                                    <h2 className=\"top\">{this.state.topText}</h2>\r\n                                    <h2 className=\"bottom\">{this.state.bottomText}</h2>\r\n                                </div>\r\n                          </div>\r\n        return (\r\n            <div>\r\n                {this.state.isLoading ? \r\n                <div style={{maxWidth: 500, margin: \"0 auto\"}}>\r\n                    <img src=\"https://media.giphy.com/media/MDrmyLuEV8XFOe7lU6/giphy.gif\" alt=\"loading_gif\" />\r\n                </div> : myMainDiv}    \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MemeGenerator;","import React from 'react';\r\n\r\nfunction CodedBy() {\r\n    return (\r\n        <div style={{position: \"fixed\", fontFamily: \"Arial, Helvetica, sans-serif\", textAlign: \"left\", width: 400, bottom: 0, left: 0}}>\r\n            Coded with <span role=\"img\" aria-label=\"Love emoji\">❤️</span> in <em><strong>ReactJS</strong></em> by <strong>TARAN MAND</strong>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CodedBy;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport MemeGenerator from \"./MemeGenerator\";\r\nimport CodedBy from \"./CodedBy\";\r\n\r\nfunction MemeApp() {\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <MemeGenerator />\r\n            <CodedBy />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MemeApp;\r\n","import React from 'react';\r\nimport MemeApp from './components/MemeApp';\r\n\r\nfunction App() {\r\n    return (\r\n        <MemeApp />\r\n    );\r\n    \r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//const myfirstelement = <h1>Hello React!</h1>\r\n\r\n// class Car extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {color: \"red\", username: \"\", age: null, errMsg: \"\", title: null};\r\n//         this.changeColor = this.changeColor.bind(this);\r\n//         this.myChangeHandler = this.myChangeHandler.bind(this);\r\n//     }\r\n\r\n//     static getDerivedStateFromProps(props, state) {\r\n//         return {color: props.color};\r\n//     }\r\n\r\n//     componentDidMount() {\r\n//         fetch('https://jsonplaceholder.typicode.com/todos/4')\r\n//         .then(response => response.json())\r\n//         .then(json => {\r\n//             console.log(json);\r\n//             this.setState({title: json.title});\r\n//         });\r\n//     }\r\n\r\n//     changeColor(newColor, ev) {\r\n//         //alert(ev.type);\r\n//         this.setState({color: newColor});\r\n//     }\r\n\r\n//     myChangeHandler(ev) {\r\n//         let nam = ev.target.name;\r\n//         let val = ev.target.value;\r\n//         let err = \"\";\r\n\r\n//         if (nam === \"age\") {\r\n//             if (val !==\"\" && !Number(val)) {\r\n//               err = <strong>Your age must be a number</strong>;\r\n//               ev.target.value = \"\";\r\n//             } \r\n//         }\r\n//         this.setState({errMsg: err});\r\n//         this.setState({[nam]: val});\r\n//     }\r\n\r\n//     mySubmitHandler = (ev) => {\r\n//         alert(\"You are submitting \" + this.state.username + \" \" + this.state.age);\r\n//         //ev.preventDefault();\r\n//         let age = this.state.age;\r\n//         if (!Number(age)) {\r\n//             alert(\"Your age must be a number\");\r\n//             ev.preventDefault();\r\n//         }\r\n//     }\r\n\r\n//     render() {\r\n//         let header = \"\";\r\n//         if (this.state.username) {\r\n//             header = <h2>Hello {this.state.username} :)</h2>\r\n//         }\r\n\r\n//         return (<div>\r\n//                     <h1>I am a <span style={{color: this.state.color}}>{this.state.color}</span> Car!, My model is {this.props.model} and year is {this.props.year} </h1>\r\n//                     <h3>Title feteched from API: {this.state.title}</h3>\r\n//                     <button id=\"btn\" onClick={this.changeColor.bind(this, \"yellow\")}>Click me!</button>\r\n//                     <form action=\"\" method=\"GET\" onSubmit={this.mySubmitHandler}>\r\n//                         {header}\r\n//                         <p>Enter Your Name: </p>\r\n//                         <input type=\"text\" name=\"username\" onChange={this.myChangeHandler} />\r\n//                         <p>Enter Your Age: </p>\r\n//                         <input type=\"text\" name=\"age\" onChange={this.myChangeHandler} />{this.state.errMsg}<br />\r\n//                         <input type=\"submit\" />\r\n\r\n//                     </form>\r\n//                 </div>);\r\n//     }\r\n// }\r\n\r\n\r\n// function Truck() {\r\n//     var props = {type: \"B-Double\"};\r\n\r\n//     return <h2>I am a {props.type} Truck!</h2>;\r\n// }\r\n\r\n\r\n// class Garage extends React.Component {\r\n//     render() {\r\n//         return ( <div className=\"mycar\">\r\n//                     <Car model=\"Chrysler\" year=\"2014\" color=\"red\" />\r\n//                     <Truck />\r\n//                     <Car model=\"Ford\" year=\"2018\" color=\"pink\" />\r\n//                 </div>);\r\n//     }\r\n// }\r\n\r\n// ReactDOM.render(<Garage /> , document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}