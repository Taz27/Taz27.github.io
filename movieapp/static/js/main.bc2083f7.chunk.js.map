{"version":3,"sources":["components/MovieCard.js","components/MovieApp.js","components/CodedBy.js","App.js","index.js"],"names":["MovieCard","props","className","src","poster","alt","style","height","title","year","MovieApp","movieCardsArray","errMsg","useState","movieSearch","setMovieSearch","movieData","setMovieData","isLoading","setIsLoading","inputEl","useRef","useEffect","current","focus","Search","map","movie","key","imdbID","Poster","Title","Year","Error","searchResults","onSubmit","event","preventDefault","fetch","then","res","json","type","ref","value","name","placeholder","onChange","target","required","display","margin","CodedBy","position","fontFamily","textAlign","width","bottom","left","role","aria-label","App","ReactDOM","render","document","getElementById"],"mappings":"4MAiBeA,MAff,SAAmBC,GAEf,OACI,yBAAKC,UAAU,0BACV,yBAAKA,UAAU,QACZ,yBAAKA,UAAU,eAAeC,IAAKF,EAAMG,OAAQC,IAAI,GAAGC,MAAO,CAACC,OAAQ,OACxE,yBAAKL,UAAU,aACX,uBAAGA,UAAU,aAAY,2CAAyBD,EAAMO,OACxD,uBAAGN,UAAU,aAAY,0CAAwBD,EAAMQ,UCsE5DC,MA7Ef,WAAoB,IAkCdC,EAAiBC,EAlCH,EAEoBC,mBAAS,IAF7B,mBAEXC,EAFW,KAEEC,EAFF,OAGgBF,mBAAS,IAHzB,mBAGXG,EAHW,KAGAC,EAHA,OAIgBJ,oBAAS,GAJzB,mBAIXK,EAJW,KAIAC,EAJA,KAOZC,EAAUC,iBAAO,MAyBvBC,qBAAU,kBAAMF,EAAQG,QAAQC,UAAS,IAIrCR,EAAUS,OACZd,EAAkBK,EAAUS,OAAOC,KAAI,SAAAC,GAAK,OAAI,kBAAC,EAAD,CAAWC,IAAKD,EAAME,OAAQzB,OAAQuB,EAAMG,OAAQtB,MAAOmB,EAAMI,MAAOtB,KAAMkB,EAAMK,UAC3HhB,EAAUiB,QACnBrB,EAASI,EAAUiB,OAIrB,IAAIC,EAAgB,yBAAKhC,UAAU,+BACVU,EAAS,4BAAKA,GAAeD,GAGtD,OACE,yBAAKT,UAAU,aACX,4BAAQA,UAAU,aACd,wBAAIA,UAAU,aAAd,oBACA,uBAAGA,UAAU,QAAb,iCACA,wBAAIA,UAAU,SAEd,0BAAMiC,SAtChB,SAAsBC,GACpBA,EAAMC,iBACNlB,GAAa,GAGbmB,MAAM,8BAAD,OAA+BxB,EAA/B,mBACAyB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAEFrB,GAAa,GACbF,EAAauB,GACbpB,EAAQG,QAAQC,aA4BZ,2BACIkB,KAAK,OACLC,IAAKvB,EACLwB,MAAO9B,EACP+B,KAAK,kBACLC,YAAY,cACZC,SAnDlB,SAAsBX,GAAQ,IACrBQ,EAASR,EAAMY,OAAfJ,MACP7B,EAAe6B,IAkDCK,UAAQ,IAGZ,4BAAQ/C,UAAU,+BAAlB,YAILgB,EACS,yBAAKf,IAAI,wDAAwDE,IAAI,cAAcC,MAAO,CAAC4C,QAAS,QAASC,OAAQ,YACnHjB,IChEPkB,MARf,WACI,OACI,yBAAK9C,MAAO,CAAC+C,SAAU,QAASC,WAAY,+BAAgCC,UAAW,OAAQC,MAAO,IAAKC,OAAQ,EAAGC,KAAM,IAA5H,cACe,0BAAMC,KAAK,MAAMC,aAAW,cAA5B,gBADf,OACqE,4BAAI,4CADzE,OAC0G,gDCQnGC,MATf,WACI,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,QCAZC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.bc2083f7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction MovieCard(props) {\r\n    //render MovieCard component and style using Bootstrap 4 classes\r\n    return (\r\n        <div className=\"col-md-6 col-lg-4 mb-3\">\r\n             <div className=\"card\">\r\n                <img className=\"card-img-top\" src={props.poster} alt=\"\" style={{height: 400}} />\r\n                <div className=\"card-body\">\r\n                    <p className=\"card-text\"><strong>Title: </strong>{props.title}</p>\r\n                    <p className=\"card-text\"><strong>Year: </strong>{props.year}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieCard","import React, { useState, useRef, useEffect } from 'react';\r\nimport MovieCard from './MovieCard';\r\n\r\nfunction MovieApp() {\r\n  //setup state\r\n  const [movieSearch, setMovieSearch] = useState(\"\");\r\n  const [movieData, setMovieData] = useState({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  //create a ref for input DOM node\r\n  const inputEl = useRef(null);\r\n\r\n  //function to handle the change event on text input\r\n  function handleChange(event) {\r\n    const {value} = event.target;\r\n    setMovieSearch(value);\r\n  }\r\n\r\n  //function to handle submit when user clicks search button\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    //fetch movie JSON data from omdb API using the search string  \r\n    fetch(`https://www.omdbapi.com/?s=${movieSearch}&apikey=thewdb`)\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            //console.log(res);\r\n            setIsLoading(false);\r\n            setMovieData(res);\r\n            inputEl.current.focus();\r\n        });\r\n  }\r\n\r\n  //put focus on text input when component mounts\r\n  useEffect(() => inputEl.current.focus(), []);\r\n  \r\n  let movieCardsArray, errMsg;\r\n  //if 'Search' property exists in movie data object, map the array and create MovieCard components\r\n  if (movieData.Search) {\r\n    movieCardsArray = movieData.Search.map(movie => <MovieCard key={movie.imdbID} poster={movie.Poster} title={movie.Title} year={movie.Year} />);\r\n  } else if (movieData.Error) { //else if 'Error' property exists, store it's value in a variable\r\n    errMsg = movieData.Error;\r\n  }\r\n  \r\n  //store the row containing MovieCard JSX elements in a variable\r\n  let searchResults = <div className=\"row justify-content-between\">\r\n                          {errMsg ? <h2>{errMsg}</h2> : movieCardsArray}\r\n                      </div>;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n            <h1 className=\"display-4\">Movie Search App</h1>\r\n            <p className=\"lead\">Enter a movie name to search:</p>\r\n            <hr className=\"my-4\" />\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    ref={inputEl} \r\n                    value={movieSearch} \r\n                    name=\"MovieSearchText\"\r\n                    placeholder=\"Search Item\" \r\n                    onChange={handleChange}\r\n                    required \r\n                />\r\n              \r\n                <button className=\"btn btn-primary btn-md ml-2\">Search</button>\r\n            </form>\r\n        </header>\r\n          \r\n          {isLoading ? \r\n                    <img src=\"https://media.giphy.com/media/y1ZBcOGOOtlpC/giphy.gif\" alt=\"loading_gif\" style={{display: \"block\", margin: \"0 auto\"}} />\r\n                    : searchResults}  \r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default MovieApp;\r\n","import React from 'react';\r\n\r\nfunction CodedBy() {\r\n    return (\r\n        <div style={{position: \"fixed\", fontFamily: \"Arial, Helvetica, sans-serif\", textAlign: \"left\", width: 400, bottom: 0, left: 0}}>\r\n            Coded with <span role=\"img\" aria-label=\"Love emoji\">❤️</span> in <em><strong>ReactJS</strong></em> by <strong>TARAN MAND</strong>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CodedBy;","import React from 'react';\r\nimport MovieApp from './components/MovieApp';\r\nimport CodedBy from './components/CodedBy';\r\n\r\nfunction App() {\r\n    return (\r\n        <div>\r\n            <MovieApp />\r\n            <CodedBy />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}