{"version":3,"sources":["HOOKS/useWordGame.js","CodedBy.js","App.js","index.js"],"names":["useWordGame","startTime","useState","text","setText","timeRemaining","setTimeRemaining","isTimeRunning","setIsTimeRunning","wordCount","setWordCount","textAreaRef","useRef","handleChange","event","value","target","calculateWordCount","txt","wordsArray","trim","split","length","startGame","current","disabled","focus","endGame","useEffect","setTimeout","prevTR","CodedBy","style","position","textAlign","width","bottom","left","fontFamily","role","aria-label","App","ref","onChange","onClick","ReactDOM","render","document","getElementById"],"mappings":"4KA2DeA,MAxDf,WAAsC,IAAjBC,EAAgB,uDAAJ,GAAI,EAGTC,mBAAS,IAHA,mBAG1BC,EAH0B,KAGpBC,EAHoB,OAISF,mBAASD,GAJlB,mBAI1BI,EAJ0B,KAIXC,EAJW,OAKSJ,oBAAS,GALlB,mBAK1BK,EAL0B,KAKXC,EALW,OAMCN,mBAAS,GANV,mBAM1BO,EAN0B,KAMfC,EANe,KAQ3BC,EAAcC,iBAAO,MAE3B,SAASC,EAAaC,GAAO,IAElBC,EAASD,EAAME,OAAfD,MACPX,EAAQW,GAGZ,SAASE,EAAmBC,GAExB,IAAMC,EAAaD,EAAIE,OAAOC,MAAM,OAEpC,MADoC,KAAlBF,EAAW,GAAY,EAAIA,EAAWG,OAiB5D,SAASC,IAELnB,EAAQ,IACRM,EAAa,GACbJ,EAAiBL,GACjBO,GAAiB,GAEjBG,EAAYa,QAAQC,UAAW,EAC/Bd,EAAYa,QAAQE,QAGxB,SAASC,IAELjB,EAAaO,EAAmBd,IAChCK,GAAiB,GAGrB,OA9BAoB,qBAAU,WAEFrB,GAAiBF,EAAgB,EAEjCwB,YAAW,WACPvB,GAAiB,SAAAwB,GAAM,OAAIA,EAAS,OACrC,KACsB,IAAlBzB,GACPsB,MAGL,CAACtB,EAAeE,IAmBZ,CAACJ,OAAMQ,cAAaE,eAAcN,gBAAeF,gBAAekB,YAAWd,cC9CvEsB,MARf,WACI,OACI,yBAAKC,MAAO,CAACC,SAAU,QAASC,UAAW,OAAQC,MAAO,IAAKC,OAAQ,EAAGC,KAAM,EAAGC,WAAY,iCAA/F,cACe,0BAAMC,KAAK,MAAMC,aAAW,cAA5B,gBADf,OACqE,4BAAI,4CADzE,OAC0G,gDCwBnGC,MAzBf,WAAe,MAEmFzC,EAAY,IAAnGG,EAFI,EAEJA,KAAMQ,EAFF,EAEEA,YAAaE,EAFf,EAEeA,aAAcN,EAF7B,EAE6BA,cAAeF,EAF5C,EAE4CA,cAAekB,EAF3D,EAE2DA,UAAWd,EAFtE,EAEsEA,UAGjF,OACI,6BACI,iDACA,qDACA,8BACIiC,IAAK/B,EACLI,MAAOZ,EACPwC,SAAU9B,EACVY,UAAWlB,IAEf,+CAAqBF,GACrB,4BAAQuC,QAASrB,EAAWE,SAAUlB,GAAkC,IAAlBF,EAAsB,aAAe,SAC3F,2CAAiBI,GACjB,kBAAC,EAAD,QChBZoC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.2b1727a8.chunk.js","sourcesContent":["//import required HOOKS from React library\r\nimport {useState, useEffect, useRef} from \"react\";\r\n\r\nfunction useWordGame(startTime = 10) {\r\n\r\n    //Setup STATE variables\r\n    const [text, setText] = useState(\"\");\r\n    const [timeRemaining, setTimeRemaining] = useState(startTime);\r\n    const [isTimeRunning, setIsTimeRunning] = useState(false);\r\n    const [wordCount, setWordCount] = useState(0);\r\n    \r\n    const textAreaRef = useRef(null); \r\n    //Define Change handler function\r\n    function handleChange(event) {\r\n        //get Textarea value and update state\r\n        const {value} = event.target;\r\n        setText(value);\r\n    }\r\n    \r\n    function calculateWordCount(txt) {\r\n        //Split the text entered by user in words array and return its length\r\n        const wordsArray = txt.trim().split(/\\s+/);\r\n        const wordCount = wordsArray[0] === \"\" ? 0 : wordsArray.length;\r\n        return wordCount;\r\n    }\r\n\r\n    useEffect(() => {\r\n        //decrement time remaining every second\r\n        if (isTimeRunning && timeRemaining > 0) {\r\n            \r\n            setTimeout(() => {\r\n                setTimeRemaining(prevTR => prevTR - 1);\r\n            }, 1000);\r\n        } else if (timeRemaining === 0) {\r\n            endGame();\r\n        }\r\n        \r\n    }, [timeRemaining, isTimeRunning]);\r\n\r\n    function startGame() {\r\n        //reset game state\r\n        setText(\"\");\r\n        setWordCount(0);\r\n        setTimeRemaining(startTime);\r\n        setIsTimeRunning(true);\r\n        //put focus on text box \r\n        textAreaRef.current.disabled = false;\r\n        textAreaRef.current.focus();\r\n    }\r\n\r\n    function endGame() {\r\n        //show word count and set isTimeRunning flag to false\r\n        setWordCount(calculateWordCount(text));\r\n        setIsTimeRunning(false);\r\n    }\r\n\r\n    return {text, textAreaRef, handleChange, isTimeRunning, timeRemaining, startGame, wordCount};\r\n}\r\n\r\nexport default useWordGame\r\n","import React from 'react';\r\n\r\nfunction CodedBy() {\r\n    return (\r\n        <div style={{position: \"fixed\", textAlign: \"left\", width: 350, bottom: 0, left: 0, fontFamily: \"Arial, Helvetica, sans-serif\"}}>\r\n            Coded with <span role=\"img\" aria-label=\"Love emoji\">❤️</span> in <em><strong>ReactJS</strong></em> by <strong>TARAN MAND</strong>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CodedBy;","import React from 'react';\r\nimport useWordGame from './HOOKS/useWordGame';\r\nimport CodedBy from './CodedBy';\r\n\r\nfunction App() {\r\n    //Destructure the object returned by custom hook\r\n    const {text, textAreaRef, handleChange, isTimeRunning, timeRemaining, startGame, wordCount} = useWordGame(15);\r\n\r\n    //Setup UI of the game\r\n    return (\r\n        <div>\r\n            <h1>SPEED TYPING GAME</h1>\r\n            <h3>How fast do you type?</h3>\r\n            <textarea \r\n                ref={textAreaRef}\r\n                value={text} \r\n                onChange={handleChange}\r\n                disabled={!isTimeRunning}\r\n            />\r\n            <h4>Time Remaining: {timeRemaining}</h4>\r\n            <button onClick={startGame} disabled={isTimeRunning}>{timeRemaining === 0 ? \"Play Again\" : \"Start\"}</button>\r\n            <h1>Word Count: {wordCount}</h1>\r\n            <CodedBy />\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./index.css\"\r\nimport App from \"./App\"\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}